//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Mdian {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("theDST")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class theDST : System.Data.DataSet {
        
        private 员工DataTable table员工;
        
        private 销售表DataTable table销售表;
        
        private 发货单列表DataTable table发货单列表;
        
        private goodsDataTable tablegoods;
        
        private 销退表DataTable table销退表;
        
        private 销售统计表DataTable table销售统计表;
        
        private 销售总览DataTable table销售总览;
        
        private 客户购买记录DataTable table客户购买记录;
        
        private 单据分析DataTable table单据分析;
        
        private 门店退货DataTable table门店退货;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public theDST() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected theDST(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["员工"] != null)) {
                    base.Tables.Add(new 员工DataTable(ds.Tables["员工"]));
                }
                if ((ds.Tables["销售表"] != null)) {
                    base.Tables.Add(new 销售表DataTable(ds.Tables["销售表"]));
                }
                if ((ds.Tables["发货单列表"] != null)) {
                    base.Tables.Add(new 发货单列表DataTable(ds.Tables["发货单列表"]));
                }
                if ((ds.Tables["goods"] != null)) {
                    base.Tables.Add(new goodsDataTable(ds.Tables["goods"]));
                }
                if ((ds.Tables["销退表"] != null)) {
                    base.Tables.Add(new 销退表DataTable(ds.Tables["销退表"]));
                }
                if ((ds.Tables["销售统计表"] != null)) {
                    base.Tables.Add(new 销售统计表DataTable(ds.Tables["销售统计表"]));
                }
                if ((ds.Tables["销售总览"] != null)) {
                    base.Tables.Add(new 销售总览DataTable(ds.Tables["销售总览"]));
                }
                if ((ds.Tables["客户购买记录"] != null)) {
                    base.Tables.Add(new 客户购买记录DataTable(ds.Tables["客户购买记录"]));
                }
                if ((ds.Tables["单据分析"] != null)) {
                    base.Tables.Add(new 单据分析DataTable(ds.Tables["单据分析"]));
                }
                if ((ds.Tables["门店退货"] != null)) {
                    base.Tables.Add(new 门店退货DataTable(ds.Tables["门店退货"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 员工DataTable 员工 {
            get {
                return this.table员工;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 销售表DataTable 销售表 {
            get {
                return this.table销售表;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 发货单列表DataTable 发货单列表 {
            get {
                return this.table发货单列表;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public goodsDataTable goods {
            get {
                return this.tablegoods;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 销退表DataTable 销退表 {
            get {
                return this.table销退表;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 销售统计表DataTable 销售统计表 {
            get {
                return this.table销售统计表;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 销售总览DataTable 销售总览 {
            get {
                return this.table销售总览;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 客户购买记录DataTable 客户购买记录 {
            get {
                return this.table客户购买记录;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 单据分析DataTable 单据分析 {
            get {
                return this.table单据分析;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 门店退货DataTable 门店退货 {
            get {
                return this.table门店退货;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            theDST cln = ((theDST)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["员工"] != null)) {
                    base.Tables.Add(new 员工DataTable(ds.Tables["员工"]));
                }
                if ((ds.Tables["销售表"] != null)) {
                    base.Tables.Add(new 销售表DataTable(ds.Tables["销售表"]));
                }
                if ((ds.Tables["发货单列表"] != null)) {
                    base.Tables.Add(new 发货单列表DataTable(ds.Tables["发货单列表"]));
                }
                if ((ds.Tables["goods"] != null)) {
                    base.Tables.Add(new goodsDataTable(ds.Tables["goods"]));
                }
                if ((ds.Tables["销退表"] != null)) {
                    base.Tables.Add(new 销退表DataTable(ds.Tables["销退表"]));
                }
                if ((ds.Tables["销售统计表"] != null)) {
                    base.Tables.Add(new 销售统计表DataTable(ds.Tables["销售统计表"]));
                }
                if ((ds.Tables["销售总览"] != null)) {
                    base.Tables.Add(new 销售总览DataTable(ds.Tables["销售总览"]));
                }
                if ((ds.Tables["客户购买记录"] != null)) {
                    base.Tables.Add(new 客户购买记录DataTable(ds.Tables["客户购买记录"]));
                }
                if ((ds.Tables["单据分析"] != null)) {
                    base.Tables.Add(new 单据分析DataTable(ds.Tables["单据分析"]));
                }
                if ((ds.Tables["门店退货"] != null)) {
                    base.Tables.Add(new 门店退货DataTable(ds.Tables["门店退货"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table员工 = ((员工DataTable)(base.Tables["员工"]));
            if ((initTable == true)) {
                if ((this.table员工 != null)) {
                    this.table员工.InitVars();
                }
            }
            this.table销售表 = ((销售表DataTable)(base.Tables["销售表"]));
            if ((initTable == true)) {
                if ((this.table销售表 != null)) {
                    this.table销售表.InitVars();
                }
            }
            this.table发货单列表 = ((发货单列表DataTable)(base.Tables["发货单列表"]));
            if ((initTable == true)) {
                if ((this.table发货单列表 != null)) {
                    this.table发货单列表.InitVars();
                }
            }
            this.tablegoods = ((goodsDataTable)(base.Tables["goods"]));
            if ((initTable == true)) {
                if ((this.tablegoods != null)) {
                    this.tablegoods.InitVars();
                }
            }
            this.table销退表 = ((销退表DataTable)(base.Tables["销退表"]));
            if ((initTable == true)) {
                if ((this.table销退表 != null)) {
                    this.table销退表.InitVars();
                }
            }
            this.table销售统计表 = ((销售统计表DataTable)(base.Tables["销售统计表"]));
            if ((initTable == true)) {
                if ((this.table销售统计表 != null)) {
                    this.table销售统计表.InitVars();
                }
            }
            this.table销售总览 = ((销售总览DataTable)(base.Tables["销售总览"]));
            if ((initTable == true)) {
                if ((this.table销售总览 != null)) {
                    this.table销售总览.InitVars();
                }
            }
            this.table客户购买记录 = ((客户购买记录DataTable)(base.Tables["客户购买记录"]));
            if ((initTable == true)) {
                if ((this.table客户购买记录 != null)) {
                    this.table客户购买记录.InitVars();
                }
            }
            this.table单据分析 = ((单据分析DataTable)(base.Tables["单据分析"]));
            if ((initTable == true)) {
                if ((this.table单据分析 != null)) {
                    this.table单据分析.InitVars();
                }
            }
            this.table门店退货 = ((门店退货DataTable)(base.Tables["门店退货"]));
            if ((initTable == true)) {
                if ((this.table门店退货 != null)) {
                    this.table门店退货.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "theDST";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/theDST.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.table员工 = new 员工DataTable();
            base.Tables.Add(this.table员工);
            this.table销售表 = new 销售表DataTable(false);
            base.Tables.Add(this.table销售表);
            this.table发货单列表 = new 发货单列表DataTable();
            base.Tables.Add(this.table发货单列表);
            this.tablegoods = new goodsDataTable(false);
            base.Tables.Add(this.tablegoods);
            this.table销退表 = new 销退表DataTable(false);
            base.Tables.Add(this.table销退表);
            this.table销售统计表 = new 销售统计表DataTable(false);
            base.Tables.Add(this.table销售统计表);
            this.table销售总览 = new 销售总览DataTable(false);
            base.Tables.Add(this.table销售总览);
            this.table客户购买记录 = new 客户购买记录DataTable(false);
            base.Tables.Add(this.table客户购买记录);
            this.table单据分析 = new 单据分析DataTable();
            base.Tables.Add(this.table单据分析);
            this.table门店退货 = new 门店退货DataTable();
            base.Tables.Add(this.table门店退货);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize员工() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize销售表() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize发货单列表() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializegoods() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize销退表() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize销售统计表() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize销售总览() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize客户购买记录() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize单据分析() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize门店退货() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            theDST ds = new theDST();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitExpressions() {
            this.销售表.nameColumn.Expression = "jliao + sliao + ssi";
            this.goods.nameColumn.Expression = "jliao + sliao + ssi";
            this.goods.zshiColumn.Expression = "zsz + \'/\' + zss";
            this.goods.fshiColumn.Expression = "fsz + \'/\' + fss";
            this.销退表.nameColumn.Expression = "jliao+sliao+ssi";
            this.销退表.zshiColumn.Expression = "zsz + \'/\' + zss";
            this.销退表.fshiColumn.Expression = "fsz+\'/\'+fss";
            this.销售统计表.NAMEColumn.Expression = "JLIAO+SLIAO+SSI";
            this.销售总览.JINEColumn.Expression = "SSALE*USERZK-YHUI";
            this.客户购买记录.NAMEColumn.Expression = "JLIAO+SLIAO+SSI";
        }
        
        public delegate void 员工RowChangeEventHandler(object sender, 员工RowChangeEvent e);
        
        public delegate void 销售表RowChangeEventHandler(object sender, 销售表RowChangeEvent e);
        
        public delegate void 发货单列表RowChangeEventHandler(object sender, 发货单列表RowChangeEvent e);
        
        public delegate void goodsRowChangeEventHandler(object sender, goodsRowChangeEvent e);
        
        public delegate void 销退表RowChangeEventHandler(object sender, 销退表RowChangeEvent e);
        
        public delegate void 销售统计表RowChangeEventHandler(object sender, 销售统计表RowChangeEvent e);
        
        public delegate void 销售总览RowChangeEventHandler(object sender, 销售总览RowChangeEvent e);
        
        public delegate void 客户购买记录RowChangeEventHandler(object sender, 客户购买记录RowChangeEvent e);
        
        public delegate void 单据分析RowChangeEventHandler(object sender, 单据分析RowChangeEvent e);
        
        public delegate void 门店退货RowChangeEventHandler(object sender, 门店退货RowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 员工DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnsid;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columnpwd;
            
            private System.Data.DataColumn columnmdian;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工DataTable() {
                this.TableName = "员工";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 员工DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 员工DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sidColumn {
                get {
                    return this.columnsid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pwdColumn {
                get {
                    return this.columnpwd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mdianColumn {
                get {
                    return this.columnmdian;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工Row this[int index] {
                get {
                    return ((员工Row)(this.Rows[index]));
                }
            }
            
            public event 员工RowChangeEventHandler 员工RowChanging;
            
            public event 员工RowChangeEventHandler 员工RowChanged;
            
            public event 员工RowChangeEventHandler 员工RowDeleting;
            
            public event 员工RowChangeEventHandler 员工RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add员工Row(员工Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工Row Add员工Row(string id, string sid, string name, string pwd, string mdian) {
                员工Row row员工Row = ((员工Row)(this.NewRow()));
                row员工Row.ItemArray = new object[] {
                        id,
                        sid,
                        name,
                        pwd,
                        mdian};
                this.Rows.Add(row员工Row);
                return row员工Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                员工DataTable cln = ((员工DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 员工DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnsid = base.Columns["sid"];
                this.columnname = base.Columns["name"];
                this.columnpwd = base.Columns["pwd"];
                this.columnmdian = base.Columns["mdian"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsid = new System.Data.DataColumn("sid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsid);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnpwd = new System.Data.DataColumn("pwd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpwd);
                this.columnmdian = new System.Data.DataColumn("mdian", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmdian);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工Row New员工Row() {
                return ((员工Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 员工Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(员工Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.员工RowChanged != null)) {
                    this.员工RowChanged(this, new 员工RowChangeEvent(((员工Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.员工RowChanging != null)) {
                    this.员工RowChanging(this, new 员工RowChangeEvent(((员工Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.员工RowDeleted != null)) {
                    this.员工RowDeleted(this, new 员工RowChangeEvent(((员工Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.员工RowDeleting != null)) {
                    this.员工RowDeleting(this, new 员工RowChangeEvent(((员工Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove员工Row(员工Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "员工DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 销售表DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntm;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columnqkou;
            
            private System.Data.DataColumn columnzshu;
            
            private System.Data.DataColumn columnkus;
            
            private System.Data.DataColumn columnjianz;
            
            private System.Data.DataColumn columnjinz;
            
            private System.Data.DataColumn columnpjianz;
            
            private System.Data.DataColumn columnzshi;
            
            private System.Data.DataColumn columnfshi;
            
            private System.Data.DataColumn columnxsou;
            
            private System.Data.DataColumn columnimgbol;
            
            private System.Data.DataColumn columnjdu;
            
            private System.Data.DataColumn columnyse;
            
            private System.Data.DataColumn columnxzuang;
            
            private System.Data.DataColumn columnqgong;
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnsxsou;
            
            private System.Data.DataColumn columnzk;
            
            private System.Data.DataColumn columnjliao;
            
            private System.Data.DataColumn columnsliao;
            
            private System.Data.DataColumn columnssi;
            
            private System.Data.DataColumn columncbei;
            
            private System.Data.DataColumn columnsliang;
            
            private System.Data.DataColumn columndwei;
            
            private System.Data.DataColumn columnzss;
            
            private System.Data.DataColumn columnzsz;
            
            private System.Data.DataColumn columnfss;
            
            private System.Data.DataColumn columnfsz;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表DataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售表DataTable(bool initExpressions) {
                this.TableName = "销售表";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售表DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 销售表DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tmColumn {
                get {
                    return this.columntm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qkouColumn {
                get {
                    return this.columnqkou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zshuColumn {
                get {
                    return this.columnzshu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kusColumn {
                get {
                    return this.columnkus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jianzColumn {
                get {
                    return this.columnjianz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jinzColumn {
                get {
                    return this.columnjinz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pjianzColumn {
                get {
                    return this.columnpjianz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zshiColumn {
                get {
                    return this.columnzshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fshiColumn {
                get {
                    return this.columnfshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn xsouColumn {
                get {
                    return this.columnxsou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn imgbolColumn {
                get {
                    return this.columnimgbol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jduColumn {
                get {
                    return this.columnjdu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn yseColumn {
                get {
                    return this.columnyse;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn xzuangColumn {
                get {
                    return this.columnxzuang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qgongColumn {
                get {
                    return this.columnqgong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sxsouColumn {
                get {
                    return this.columnsxsou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zkColumn {
                get {
                    return this.columnzk;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jliaoColumn {
                get {
                    return this.columnjliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliaoColumn {
                get {
                    return this.columnsliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ssiColumn {
                get {
                    return this.columnssi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cbeiColumn {
                get {
                    return this.columncbei;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliangColumn {
                get {
                    return this.columnsliang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn dweiColumn {
                get {
                    return this.columndwei;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zssColumn {
                get {
                    return this.columnzss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zszColumn {
                get {
                    return this.columnzsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fssColumn {
                get {
                    return this.columnfss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fszColumn {
                get {
                    return this.columnfsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表Row this[int index] {
                get {
                    return ((销售表Row)(this.Rows[index]));
                }
            }
            
            public event 销售表RowChangeEventHandler 销售表RowChanging;
            
            public event 销售表RowChangeEventHandler 销售表RowChanged;
            
            public event 销售表RowChangeEventHandler 销售表RowDeleting;
            
            public event 销售表RowChangeEventHandler 销售表RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add销售表Row(销售表Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表Row Add销售表Row(
                        string tm, 
                        string name, 
                        string qkou, 
                        string zshu, 
                        string kus, 
                        string jianz, 
                        string jinz, 
                        string pjianz, 
                        string zshi, 
                        string fshi, 
                        int xsou, 
                        bool imgbol, 
                        string jdu, 
                        string yse, 
                        string xzuang, 
                        string qgong, 
                        string id, 
                        int sxsou, 
                        double zk, 
                        string jliao, 
                        string sliao, 
                        string ssi, 
                        string cbei, 
                        string sliang, 
                        string dwei, 
                        double zss, 
                        double zsz, 
                        double fss, 
                        double fsz) {
                销售表Row row销售表Row = ((销售表Row)(this.NewRow()));
                row销售表Row.ItemArray = new object[] {
                        tm,
                        name,
                        qkou,
                        zshu,
                        kus,
                        jianz,
                        jinz,
                        pjianz,
                        zshi,
                        fshi,
                        xsou,
                        imgbol,
                        jdu,
                        yse,
                        xzuang,
                        qgong,
                        id,
                        sxsou,
                        zk,
                        jliao,
                        sliao,
                        ssi,
                        cbei,
                        sliang,
                        dwei,
                        zss,
                        zsz,
                        fss,
                        fsz};
                this.Rows.Add(row销售表Row);
                return row销售表Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表Row FindBytm(string tm) {
                return ((销售表Row)(this.Rows.Find(new object[] {
                            tm})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                销售表DataTable cln = ((销售表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 销售表DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntm = base.Columns["tm"];
                this.columnname = base.Columns["name"];
                this.columnqkou = base.Columns["qkou"];
                this.columnzshu = base.Columns["zshu"];
                this.columnkus = base.Columns["kus"];
                this.columnjianz = base.Columns["jianz"];
                this.columnjinz = base.Columns["jinz"];
                this.columnpjianz = base.Columns["pjianz"];
                this.columnzshi = base.Columns["zshi"];
                this.columnfshi = base.Columns["fshi"];
                this.columnxsou = base.Columns["xsou"];
                this.columnimgbol = base.Columns["imgbol"];
                this.columnjdu = base.Columns["jdu"];
                this.columnyse = base.Columns["yse"];
                this.columnxzuang = base.Columns["xzuang"];
                this.columnqgong = base.Columns["qgong"];
                this.columnid = base.Columns["id"];
                this.columnsxsou = base.Columns["sxsou"];
                this.columnzk = base.Columns["zk"];
                this.columnjliao = base.Columns["jliao"];
                this.columnsliao = base.Columns["sliao"];
                this.columnssi = base.Columns["ssi"];
                this.columncbei = base.Columns["cbei"];
                this.columnsliang = base.Columns["sliang"];
                this.columndwei = base.Columns["dwei"];
                this.columnzss = base.Columns["zss"];
                this.columnzsz = base.Columns["zsz"];
                this.columnfss = base.Columns["fss"];
                this.columnfsz = base.Columns["fsz"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntm = new System.Data.DataColumn("tm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntm);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnqkou = new System.Data.DataColumn("qkou", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqkou);
                this.columnzshu = new System.Data.DataColumn("zshu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzshu);
                this.columnkus = new System.Data.DataColumn("kus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkus);
                this.columnjianz = new System.Data.DataColumn("jianz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjianz);
                this.columnjinz = new System.Data.DataColumn("jinz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjinz);
                this.columnpjianz = new System.Data.DataColumn("pjianz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpjianz);
                this.columnzshi = new System.Data.DataColumn("zshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzshi);
                this.columnfshi = new System.Data.DataColumn("fshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfshi);
                this.columnxsou = new System.Data.DataColumn("xsou", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnxsou);
                this.columnimgbol = new System.Data.DataColumn("imgbol", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnimgbol);
                this.columnjdu = new System.Data.DataColumn("jdu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjdu);
                this.columnyse = new System.Data.DataColumn("yse", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnyse);
                this.columnxzuang = new System.Data.DataColumn("xzuang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnxzuang);
                this.columnqgong = new System.Data.DataColumn("qgong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqgong);
                this.columnid = new System.Data.DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsxsou = new System.Data.DataColumn("sxsou", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsxsou);
                this.columnzk = new System.Data.DataColumn("zk", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzk);
                this.columnjliao = new System.Data.DataColumn("jliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjliao);
                this.columnsliao = new System.Data.DataColumn("sliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliao);
                this.columnssi = new System.Data.DataColumn("ssi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnssi);
                this.columncbei = new System.Data.DataColumn("cbei", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncbei);
                this.columnsliang = new System.Data.DataColumn("sliang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliang);
                this.columndwei = new System.Data.DataColumn("dwei", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndwei);
                this.columnzss = new System.Data.DataColumn("zss", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzss);
                this.columnzsz = new System.Data.DataColumn("zsz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzsz);
                this.columnfss = new System.Data.DataColumn("fss", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfss);
                this.columnfsz = new System.Data.DataColumn("fsz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfsz);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columntm}, true));
                this.columntm.AllowDBNull = false;
                this.columntm.Unique = true;
                this.columnname.ReadOnly = true;
                this.columnzk.DefaultValue = ((double)(1));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表Row New销售表Row() {
                return ((销售表Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 销售表Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(销售表Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.nameColumn.Expression = "jliao + sliao + ssi";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.销售表RowChanged != null)) {
                    this.销售表RowChanged(this, new 销售表RowChangeEvent(((销售表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.销售表RowChanging != null)) {
                    this.销售表RowChanging(this, new 销售表RowChangeEvent(((销售表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.销售表RowDeleted != null)) {
                    this.销售表RowDeleted(this, new 销售表RowChangeEvent(((销售表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.销售表RowDeleting != null)) {
                    this.销售表RowDeleting(this, new 销售表RowChangeEvent(((销售表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove销售表Row(销售表Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "销售表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 发货单列表DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnXTIME;
            
            private System.Data.DataColumn columnDH;
            
            private System.Data.DataColumn columnSL;
            
            private System.Data.DataColumn columnUSER;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表DataTable() {
                this.TableName = "发货单列表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发货单列表DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 发货单列表DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn XTIMEColumn {
                get {
                    return this.columnXTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表Row this[int index] {
                get {
                    return ((发货单列表Row)(this.Rows[index]));
                }
            }
            
            public event 发货单列表RowChangeEventHandler 发货单列表RowChanging;
            
            public event 发货单列表RowChangeEventHandler 发货单列表RowChanged;
            
            public event 发货单列表RowChangeEventHandler 发货单列表RowDeleting;
            
            public event 发货单列表RowChangeEventHandler 发货单列表RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add发货单列表Row(发货单列表Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表Row Add发货单列表Row(string XTIME, string DH, string SL, string USER) {
                发货单列表Row row发货单列表Row = ((发货单列表Row)(this.NewRow()));
                row发货单列表Row.ItemArray = new object[] {
                        XTIME,
                        DH,
                        SL,
                        USER};
                this.Rows.Add(row发货单列表Row);
                return row发货单列表Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                发货单列表DataTable cln = ((发货单列表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 发货单列表DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnXTIME = base.Columns["XTIME"];
                this.columnDH = base.Columns["DH"];
                this.columnSL = base.Columns["SL"];
                this.columnUSER = base.Columns["USER"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnXTIME = new System.Data.DataColumn("XTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnXTIME);
                this.columnDH = new System.Data.DataColumn("DH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnSL = new System.Data.DataColumn("SL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnUSER = new System.Data.DataColumn("USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表Row New发货单列表Row() {
                return ((发货单列表Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 发货单列表Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(发货单列表Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.发货单列表RowChanged != null)) {
                    this.发货单列表RowChanged(this, new 发货单列表RowChangeEvent(((发货单列表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.发货单列表RowChanging != null)) {
                    this.发货单列表RowChanging(this, new 发货单列表RowChangeEvent(((发货单列表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.发货单列表RowDeleted != null)) {
                    this.发货单列表RowDeleted(this, new 发货单列表RowChangeEvent(((发货单列表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.发货单列表RowDeleting != null)) {
                    this.发货单列表RowDeleting(this, new 发货单列表RowChangeEvent(((发货单列表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove发货单列表Row(发货单列表Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "发货单列表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class goodsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columntm;
            
            private System.Data.DataColumn columnjliao;
            
            private System.Data.DataColumn columnsliao;
            
            private System.Data.DataColumn columnssi;
            
            private System.Data.DataColumn columnqkou;
            
            private System.Data.DataColumn columnzshu;
            
            private System.Data.DataColumn columnkus;
            
            private System.Data.DataColumn columnhhao;
            
            private System.Data.DataColumn columndwei;
            
            private System.Data.DataColumn columnsliang;
            
            private System.Data.DataColumn columnjianz;
            
            private System.Data.DataColumn columnjinz;
            
            private System.Data.DataColumn columnpjianz;
            
            private System.Data.DataColumn columnblu;
            
            private System.Data.DataColumn columnzsz;
            
            private System.Data.DataColumn columnzss;
            
            private System.Data.DataColumn columnfsz;
            
            private System.Data.DataColumn columnfss;
            
            private System.Data.DataColumn columncbei;
            
            private System.Data.DataColumn columnxsou;
            
            private System.Data.DataColumn columnbzhu;
            
            private System.Data.DataColumn columnslbol;
            
            private System.Data.DataColumn columnimgbol;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columnzshi;
            
            private System.Data.DataColumn columnfshi;
            
            private System.Data.DataColumn columnyse;
            
            private System.Data.DataColumn columnxzuang;
            
            private System.Data.DataColumn columnqgong;
            
            private System.Data.DataColumn columnjdu;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsDataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal goodsDataTable(bool initExpressions) {
                this.TableName = "goods";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal goodsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected goodsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tmColumn {
                get {
                    return this.columntm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jliaoColumn {
                get {
                    return this.columnjliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliaoColumn {
                get {
                    return this.columnsliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ssiColumn {
                get {
                    return this.columnssi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qkouColumn {
                get {
                    return this.columnqkou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zshuColumn {
                get {
                    return this.columnzshu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kusColumn {
                get {
                    return this.columnkus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn hhaoColumn {
                get {
                    return this.columnhhao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn dweiColumn {
                get {
                    return this.columndwei;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliangColumn {
                get {
                    return this.columnsliang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jianzColumn {
                get {
                    return this.columnjianz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jinzColumn {
                get {
                    return this.columnjinz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pjianzColumn {
                get {
                    return this.columnpjianz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn bluColumn {
                get {
                    return this.columnblu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zszColumn {
                get {
                    return this.columnzsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zssColumn {
                get {
                    return this.columnzss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fszColumn {
                get {
                    return this.columnfsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fssColumn {
                get {
                    return this.columnfss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cbeiColumn {
                get {
                    return this.columncbei;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn xsouColumn {
                get {
                    return this.columnxsou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn bzhuColumn {
                get {
                    return this.columnbzhu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn slbolColumn {
                get {
                    return this.columnslbol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn imgbolColumn {
                get {
                    return this.columnimgbol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zshiColumn {
                get {
                    return this.columnzshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fshiColumn {
                get {
                    return this.columnfshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn yseColumn {
                get {
                    return this.columnyse;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn xzuangColumn {
                get {
                    return this.columnxzuang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qgongColumn {
                get {
                    return this.columnqgong;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jduColumn {
                get {
                    return this.columnjdu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRow this[int index] {
                get {
                    return ((goodsRow)(this.Rows[index]));
                }
            }
            
            public event goodsRowChangeEventHandler goodsRowChanging;
            
            public event goodsRowChangeEventHandler goodsRowChanged;
            
            public event goodsRowChangeEventHandler goodsRowDeleting;
            
            public event goodsRowChangeEventHandler goodsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddgoodsRow(goodsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRow AddgoodsRow(
                        string id, 
                        string tm, 
                        string jliao, 
                        string sliao, 
                        string ssi, 
                        string qkou, 
                        string zshu, 
                        string kus, 
                        string hhao, 
                        string dwei, 
                        int sliang, 
                        double jianz, 
                        double jinz, 
                        double pjianz, 
                        double blu, 
                        double zsz, 
                        int zss, 
                        double fsz, 
                        int fss, 
                        double cbei, 
                        double xsou, 
                        string bzhu, 
                        bool slbol, 
                        bool imgbol, 
                        string name, 
                        string zshi, 
                        string fshi, 
                        string yse, 
                        string xzuang, 
                        string qgong, 
                        string jdu) {
                goodsRow rowgoodsRow = ((goodsRow)(this.NewRow()));
                rowgoodsRow.ItemArray = new object[] {
                        id,
                        tm,
                        jliao,
                        sliao,
                        ssi,
                        qkou,
                        zshu,
                        kus,
                        hhao,
                        dwei,
                        sliang,
                        jianz,
                        jinz,
                        pjianz,
                        blu,
                        zsz,
                        zss,
                        fsz,
                        fss,
                        cbei,
                        xsou,
                        bzhu,
                        slbol,
                        imgbol,
                        name,
                        zshi,
                        fshi,
                        yse,
                        xzuang,
                        qgong,
                        jdu};
                this.Rows.Add(rowgoodsRow);
                return rowgoodsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRow FindBytm(string tm) {
                return ((goodsRow)(this.Rows.Find(new object[] {
                            tm})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                goodsDataTable cln = ((goodsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new goodsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columntm = base.Columns["tm"];
                this.columnjliao = base.Columns["jliao"];
                this.columnsliao = base.Columns["sliao"];
                this.columnssi = base.Columns["ssi"];
                this.columnqkou = base.Columns["qkou"];
                this.columnzshu = base.Columns["zshu"];
                this.columnkus = base.Columns["kus"];
                this.columnhhao = base.Columns["hhao"];
                this.columndwei = base.Columns["dwei"];
                this.columnsliang = base.Columns["sliang"];
                this.columnjianz = base.Columns["jianz"];
                this.columnjinz = base.Columns["jinz"];
                this.columnpjianz = base.Columns["pjianz"];
                this.columnblu = base.Columns["blu"];
                this.columnzsz = base.Columns["zsz"];
                this.columnzss = base.Columns["zss"];
                this.columnfsz = base.Columns["fsz"];
                this.columnfss = base.Columns["fss"];
                this.columncbei = base.Columns["cbei"];
                this.columnxsou = base.Columns["xsou"];
                this.columnbzhu = base.Columns["bzhu"];
                this.columnslbol = base.Columns["slbol"];
                this.columnimgbol = base.Columns["imgbol"];
                this.columnname = base.Columns["name"];
                this.columnzshi = base.Columns["zshi"];
                this.columnfshi = base.Columns["fshi"];
                this.columnyse = base.Columns["yse"];
                this.columnxzuang = base.Columns["xzuang"];
                this.columnqgong = base.Columns["qgong"];
                this.columnjdu = base.Columns["jdu"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntm = new System.Data.DataColumn("tm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntm);
                this.columnjliao = new System.Data.DataColumn("jliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjliao);
                this.columnsliao = new System.Data.DataColumn("sliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliao);
                this.columnssi = new System.Data.DataColumn("ssi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnssi);
                this.columnqkou = new System.Data.DataColumn("qkou", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqkou);
                this.columnzshu = new System.Data.DataColumn("zshu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzshu);
                this.columnkus = new System.Data.DataColumn("kus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkus);
                this.columnhhao = new System.Data.DataColumn("hhao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhhao);
                this.columndwei = new System.Data.DataColumn("dwei", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndwei);
                this.columnsliang = new System.Data.DataColumn("sliang", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliang);
                this.columnjianz = new System.Data.DataColumn("jianz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjianz);
                this.columnjinz = new System.Data.DataColumn("jinz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjinz);
                this.columnpjianz = new System.Data.DataColumn("pjianz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpjianz);
                this.columnblu = new System.Data.DataColumn("blu", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnblu);
                this.columnzsz = new System.Data.DataColumn("zsz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzsz);
                this.columnzss = new System.Data.DataColumn("zss", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzss);
                this.columnfsz = new System.Data.DataColumn("fsz", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfsz);
                this.columnfss = new System.Data.DataColumn("fss", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfss);
                this.columncbei = new System.Data.DataColumn("cbei", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncbei);
                this.columnxsou = new System.Data.DataColumn("xsou", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnxsou);
                this.columnbzhu = new System.Data.DataColumn("bzhu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbzhu);
                this.columnslbol = new System.Data.DataColumn("slbol", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnslbol);
                this.columnimgbol = new System.Data.DataColumn("imgbol", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnimgbol);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnzshi = new System.Data.DataColumn("zshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzshi);
                this.columnfshi = new System.Data.DataColumn("fshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfshi);
                this.columnyse = new System.Data.DataColumn("yse", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnyse);
                this.columnxzuang = new System.Data.DataColumn("xzuang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnxzuang);
                this.columnqgong = new System.Data.DataColumn("qgong", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqgong);
                this.columnjdu = new System.Data.DataColumn("jdu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjdu);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columntm}, true));
                this.columntm.AllowDBNull = false;
                this.columntm.Unique = true;
                this.columnname.ReadOnly = true;
                this.columnzshi.ReadOnly = true;
                this.columnfshi.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRow NewgoodsRow() {
                return ((goodsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new goodsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(goodsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.nameColumn.Expression = "jliao + sliao + ssi";
                this.zshiColumn.Expression = "zsz + \'/\' + zss";
                this.fshiColumn.Expression = "fsz + \'/\' + fss";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.goodsRowChanged != null)) {
                    this.goodsRowChanged(this, new goodsRowChangeEvent(((goodsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.goodsRowChanging != null)) {
                    this.goodsRowChanging(this, new goodsRowChangeEvent(((goodsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.goodsRowDeleted != null)) {
                    this.goodsRowDeleted(this, new goodsRowChangeEvent(((goodsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.goodsRowDeleting != null)) {
                    this.goodsRowDeleting(this, new goodsRowChangeEvent(((goodsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovegoodsRow(goodsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "goodsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 销退表DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columntm;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columnsettime;
            
            private System.Data.DataColumn columnsbm;
            
            private System.Data.DataColumn columnsliang;
            
            private System.Data.DataColumn columndwei;
            
            private System.Data.DataColumn columnzkou;
            
            private System.Data.DataColumn columnkhu;
            
            private System.Data.DataColumn columnuser;
            
            private System.Data.DataColumn columnsale;
            
            private System.Data.DataColumn columnssale;
            
            private System.Data.DataColumn columnimgbol;
            
            private System.Data.DataColumn columnjliao;
            
            private System.Data.DataColumn columnsliao;
            
            private System.Data.DataColumn columnssi;
            
            private System.Data.DataColumn columnkehuid;
            
            private System.Data.DataColumn columntjia;
            
            private System.Data.DataColumn columnzss;
            
            private System.Data.DataColumn columnzsz;
            
            private System.Data.DataColumn columnfss;
            
            private System.Data.DataColumn columnfsz;
            
            private System.Data.DataColumn columnzshi;
            
            private System.Data.DataColumn columnfshi;
            
            private System.Data.DataColumn columnjinz;
            
            private System.Data.DataColumn columnkus;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表DataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销退表DataTable(bool initExpressions) {
                this.TableName = "销退表";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销退表DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 销退表DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tmColumn {
                get {
                    return this.columntm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn settimeColumn {
                get {
                    return this.columnsettime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sbmColumn {
                get {
                    return this.columnsbm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliangColumn {
                get {
                    return this.columnsliang;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn dweiColumn {
                get {
                    return this.columndwei;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zkouColumn {
                get {
                    return this.columnzkou;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn khuColumn {
                get {
                    return this.columnkhu;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn userColumn {
                get {
                    return this.columnuser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn saleColumn {
                get {
                    return this.columnsale;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ssaleColumn {
                get {
                    return this.columnssale;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn imgbolColumn {
                get {
                    return this.columnimgbol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jliaoColumn {
                get {
                    return this.columnjliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sliaoColumn {
                get {
                    return this.columnsliao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ssiColumn {
                get {
                    return this.columnssi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kehuidColumn {
                get {
                    return this.columnkehuid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn tjiaColumn {
                get {
                    return this.columntjia;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zssColumn {
                get {
                    return this.columnzss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zszColumn {
                get {
                    return this.columnzsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fssColumn {
                get {
                    return this.columnfss;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fszColumn {
                get {
                    return this.columnfsz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn zshiColumn {
                get {
                    return this.columnzshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fshiColumn {
                get {
                    return this.columnfshi;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn jinzColumn {
                get {
                    return this.columnjinz;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kusColumn {
                get {
                    return this.columnkus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表Row this[int index] {
                get {
                    return ((销退表Row)(this.Rows[index]));
                }
            }
            
            public event 销退表RowChangeEventHandler 销退表RowChanging;
            
            public event 销退表RowChangeEventHandler 销退表RowChanged;
            
            public event 销退表RowChangeEventHandler 销退表RowDeleting;
            
            public event 销退表RowChangeEventHandler 销退表RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add销退表Row(销退表Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表Row Add销退表Row(
                        string tm, 
                        string name, 
                        string settime, 
                        string sbm, 
                        string sliang, 
                        string dwei, 
                        string zkou, 
                        string khu, 
                        string user, 
                        string sale, 
                        double ssale, 
                        bool imgbol, 
                        string jliao, 
                        string sliao, 
                        string ssi, 
                        string kehuid, 
                        double tjia, 
                        string zss, 
                        string zsz, 
                        string fss, 
                        string fsz, 
                        string zshi, 
                        string fshi, 
                        string jinz, 
                        string kus) {
                销退表Row row销退表Row = ((销退表Row)(this.NewRow()));
                row销退表Row.ItemArray = new object[] {
                        tm,
                        name,
                        settime,
                        sbm,
                        sliang,
                        dwei,
                        zkou,
                        khu,
                        user,
                        sale,
                        ssale,
                        imgbol,
                        jliao,
                        sliao,
                        ssi,
                        kehuid,
                        tjia,
                        zss,
                        zsz,
                        fss,
                        fsz,
                        zshi,
                        fshi,
                        jinz,
                        kus};
                this.Rows.Add(row销退表Row);
                return row销退表Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                销退表DataTable cln = ((销退表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 销退表DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntm = base.Columns["tm"];
                this.columnname = base.Columns["name"];
                this.columnsettime = base.Columns["settime"];
                this.columnsbm = base.Columns["sbm"];
                this.columnsliang = base.Columns["sliang"];
                this.columndwei = base.Columns["dwei"];
                this.columnzkou = base.Columns["zkou"];
                this.columnkhu = base.Columns["khu"];
                this.columnuser = base.Columns["user"];
                this.columnsale = base.Columns["sale"];
                this.columnssale = base.Columns["ssale"];
                this.columnimgbol = base.Columns["imgbol"];
                this.columnjliao = base.Columns["jliao"];
                this.columnsliao = base.Columns["sliao"];
                this.columnssi = base.Columns["ssi"];
                this.columnkehuid = base.Columns["kehuid"];
                this.columntjia = base.Columns["tjia"];
                this.columnzss = base.Columns["zss"];
                this.columnzsz = base.Columns["zsz"];
                this.columnfss = base.Columns["fss"];
                this.columnfsz = base.Columns["fsz"];
                this.columnzshi = base.Columns["zshi"];
                this.columnfshi = base.Columns["fshi"];
                this.columnjinz = base.Columns["jinz"];
                this.columnkus = base.Columns["kus"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntm = new System.Data.DataColumn("tm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntm);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsettime = new System.Data.DataColumn("settime", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsettime);
                this.columnsbm = new System.Data.DataColumn("sbm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsbm);
                this.columnsliang = new System.Data.DataColumn("sliang", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliang);
                this.columndwei = new System.Data.DataColumn("dwei", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndwei);
                this.columnzkou = new System.Data.DataColumn("zkou", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzkou);
                this.columnkhu = new System.Data.DataColumn("khu", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkhu);
                this.columnuser = new System.Data.DataColumn("user", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser);
                this.columnsale = new System.Data.DataColumn("sale", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsale);
                this.columnssale = new System.Data.DataColumn("ssale", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnssale);
                this.columnimgbol = new System.Data.DataColumn("imgbol", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnimgbol);
                this.columnjliao = new System.Data.DataColumn("jliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjliao);
                this.columnsliao = new System.Data.DataColumn("sliao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsliao);
                this.columnssi = new System.Data.DataColumn("ssi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnssi);
                this.columnkehuid = new System.Data.DataColumn("kehuid", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkehuid);
                this.columntjia = new System.Data.DataColumn("tjia", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntjia);
                this.columnzss = new System.Data.DataColumn("zss", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzss);
                this.columnzsz = new System.Data.DataColumn("zsz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzsz);
                this.columnfss = new System.Data.DataColumn("fss", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfss);
                this.columnfsz = new System.Data.DataColumn("fsz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfsz);
                this.columnzshi = new System.Data.DataColumn("zshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnzshi);
                this.columnfshi = new System.Data.DataColumn("fshi", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfshi);
                this.columnjinz = new System.Data.DataColumn("jinz", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnjinz);
                this.columnkus = new System.Data.DataColumn("kus", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkus);
                this.columnname.ReadOnly = true;
                this.columnzshi.ReadOnly = true;
                this.columnfshi.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表Row New销退表Row() {
                return ((销退表Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 销退表Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(销退表Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.nameColumn.Expression = "jliao+sliao+ssi";
                this.zshiColumn.Expression = "zsz + \'/\' + zss";
                this.fshiColumn.Expression = "fsz+\'/\'+fss";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.销退表RowChanged != null)) {
                    this.销退表RowChanged(this, new 销退表RowChangeEvent(((销退表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.销退表RowChanging != null)) {
                    this.销退表RowChanging(this, new 销退表RowChangeEvent(((销退表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.销退表RowDeleted != null)) {
                    this.销退表RowDeleted(this, new 销退表RowChangeEvent(((销退表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.销退表RowDeleting != null)) {
                    this.销退表RowDeleting(this, new 销退表RowChangeEvent(((销退表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove销退表Row(销退表Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "销退表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 销售统计表DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTM;
            
            private System.Data.DataColumn columnNAME;
            
            private System.Data.DataColumn columnIMGBOL;
            
            private System.Data.DataColumn columnSALE;
            
            private System.Data.DataColumn columnSSALE;
            
            private System.Data.DataColumn columnKHU;
            
            private System.Data.DataColumn columnSBM;
            
            private System.Data.DataColumn columnSETTIME;
            
            private System.Data.DataColumn columnUSER;
            
            private System.Data.DataColumn columnZKOU;
            
            private System.Data.DataColumn columnSLIANG;
            
            private System.Data.DataColumn columnDWEI;
            
            private System.Data.DataColumn columnSLIAO;
            
            private System.Data.DataColumn columnJLIAO;
            
            private System.Data.DataColumn columnSSI;
            
            private System.Data.DataColumn columnID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表DataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售统计表DataTable(bool initExpressions) {
                this.TableName = "销售统计表";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售统计表DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 销售统计表DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TMColumn {
                get {
                    return this.columnTM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IMGBOLColumn {
                get {
                    return this.columnIMGBOL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SALEColumn {
                get {
                    return this.columnSALE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSALEColumn {
                get {
                    return this.columnSSALE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KHUColumn {
                get {
                    return this.columnKHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SBMColumn {
                get {
                    return this.columnSBM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTIMEColumn {
                get {
                    return this.columnSETTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZKOUColumn {
                get {
                    return this.columnZKOU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIANGColumn {
                get {
                    return this.columnSLIANG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DWEIColumn {
                get {
                    return this.columnDWEI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIAOColumn {
                get {
                    return this.columnSLIAO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JLIAOColumn {
                get {
                    return this.columnJLIAO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSIColumn {
                get {
                    return this.columnSSI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表Row this[int index] {
                get {
                    return ((销售统计表Row)(this.Rows[index]));
                }
            }
            
            public event 销售统计表RowChangeEventHandler 销售统计表RowChanging;
            
            public event 销售统计表RowChangeEventHandler 销售统计表RowChanged;
            
            public event 销售统计表RowChangeEventHandler 销售统计表RowDeleting;
            
            public event 销售统计表RowChangeEventHandler 销售统计表RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add销售统计表Row(销售统计表Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表Row Add销售统计表Row(string TM, string NAME, bool IMGBOL, double SALE, double SSALE, string KHU, string SBM, string SETTIME, string USER, string ZKOU, int SLIANG, string DWEI, string SLIAO, string JLIAO, string SSI) {
                销售统计表Row row销售统计表Row = ((销售统计表Row)(this.NewRow()));
                row销售统计表Row.ItemArray = new object[] {
                        TM,
                        NAME,
                        IMGBOL,
                        SALE,
                        SSALE,
                        KHU,
                        SBM,
                        SETTIME,
                        USER,
                        ZKOU,
                        SLIANG,
                        DWEI,
                        SLIAO,
                        JLIAO,
                        SSI,
                        null};
                this.Rows.Add(row销售统计表Row);
                return row销售统计表Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                销售统计表DataTable cln = ((销售统计表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 销售统计表DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTM = base.Columns["TM"];
                this.columnNAME = base.Columns["NAME"];
                this.columnIMGBOL = base.Columns["IMGBOL"];
                this.columnSALE = base.Columns["SALE"];
                this.columnSSALE = base.Columns["SSALE"];
                this.columnKHU = base.Columns["KHU"];
                this.columnSBM = base.Columns["SBM"];
                this.columnSETTIME = base.Columns["SETTIME"];
                this.columnUSER = base.Columns["USER"];
                this.columnZKOU = base.Columns["ZKOU"];
                this.columnSLIANG = base.Columns["SLIANG"];
                this.columnDWEI = base.Columns["DWEI"];
                this.columnSLIAO = base.Columns["SLIAO"];
                this.columnJLIAO = base.Columns["JLIAO"];
                this.columnSSI = base.Columns["SSI"];
                this.columnID = base.Columns["ID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTM = new System.Data.DataColumn("TM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTM);
                this.columnNAME = new System.Data.DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnIMGBOL = new System.Data.DataColumn("IMGBOL", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMGBOL);
                this.columnSALE = new System.Data.DataColumn("SALE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE);
                this.columnSSALE = new System.Data.DataColumn("SSALE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSALE);
                this.columnKHU = new System.Data.DataColumn("KHU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKHU);
                this.columnSBM = new System.Data.DataColumn("SBM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBM);
                this.columnSETTIME = new System.Data.DataColumn("SETTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTIME);
                this.columnUSER = new System.Data.DataColumn("USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
                this.columnZKOU = new System.Data.DataColumn("ZKOU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZKOU);
                this.columnSLIANG = new System.Data.DataColumn("SLIANG", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIANG);
                this.columnDWEI = new System.Data.DataColumn("DWEI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWEI);
                this.columnSLIAO = new System.Data.DataColumn("SLIAO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIAO);
                this.columnJLIAO = new System.Data.DataColumn("JLIAO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLIAO);
                this.columnSSI = new System.Data.DataColumn("SSI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSI);
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNAME.ReadOnly = true;
                this.columnID.AutoIncrement = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表Row New销售统计表Row() {
                return ((销售统计表Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 销售统计表Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(销售统计表Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.NAMEColumn.Expression = "JLIAO+SLIAO+SSI";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.销售统计表RowChanged != null)) {
                    this.销售统计表RowChanged(this, new 销售统计表RowChangeEvent(((销售统计表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.销售统计表RowChanging != null)) {
                    this.销售统计表RowChanging(this, new 销售统计表RowChangeEvent(((销售统计表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.销售统计表RowDeleted != null)) {
                    this.销售统计表RowDeleted(this, new 销售统计表RowChangeEvent(((销售统计表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.销售统计表RowDeleting != null)) {
                    this.销售统计表RowDeleting(this, new 销售统计表RowChangeEvent(((销售统计表Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove销售统计表Row(销售统计表Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "销售统计表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 销售总览DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnSETTIME;
            
            private System.Data.DataColumn columnSBM;
            
            private System.Data.DataColumn columnSLIANG;
            
            private System.Data.DataColumn columnUSER;
            
            private System.Data.DataColumn columnSSALE;
            
            private System.Data.DataColumn columnYHUI;
            
            private System.Data.DataColumn columnUSERZK;
            
            private System.Data.DataColumn columnJINE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览DataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售总览DataTable(bool initExpressions) {
                this.TableName = "销售总览";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售总览DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 销售总览DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTIMEColumn {
                get {
                    return this.columnSETTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SBMColumn {
                get {
                    return this.columnSBM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIANGColumn {
                get {
                    return this.columnSLIANG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSALEColumn {
                get {
                    return this.columnSSALE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YHUIColumn {
                get {
                    return this.columnYHUI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERZKColumn {
                get {
                    return this.columnUSERZK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JINEColumn {
                get {
                    return this.columnJINE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览Row this[int index] {
                get {
                    return ((销售总览Row)(this.Rows[index]));
                }
            }
            
            public event 销售总览RowChangeEventHandler 销售总览RowChanging;
            
            public event 销售总览RowChangeEventHandler 销售总览RowChanged;
            
            public event 销售总览RowChangeEventHandler 销售总览RowDeleting;
            
            public event 销售总览RowChangeEventHandler 销售总览RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add销售总览Row(销售总览Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览Row Add销售总览Row(string SETTIME, string SBM, string SLIANG, string USER, double SSALE, double YHUI, double USERZK, double JINE) {
                销售总览Row row销售总览Row = ((销售总览Row)(this.NewRow()));
                row销售总览Row.ItemArray = new object[] {
                        null,
                        SETTIME,
                        SBM,
                        SLIANG,
                        USER,
                        SSALE,
                        YHUI,
                        USERZK,
                        JINE};
                this.Rows.Add(row销售总览Row);
                return row销售总览Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                销售总览DataTable cln = ((销售总览DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 销售总览DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSETTIME = base.Columns["SETTIME"];
                this.columnSBM = base.Columns["SBM"];
                this.columnSLIANG = base.Columns["SLIANG"];
                this.columnUSER = base.Columns["USER"];
                this.columnSSALE = base.Columns["SSALE"];
                this.columnYHUI = base.Columns["YHUI"];
                this.columnUSERZK = base.Columns["USERZK"];
                this.columnJINE = base.Columns["JINE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSETTIME = new System.Data.DataColumn("SETTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTIME);
                this.columnSBM = new System.Data.DataColumn("SBM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBM);
                this.columnSLIANG = new System.Data.DataColumn("SLIANG", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIANG);
                this.columnUSER = new System.Data.DataColumn("USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
                this.columnSSALE = new System.Data.DataColumn("SSALE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSALE);
                this.columnYHUI = new System.Data.DataColumn("YHUI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYHUI);
                this.columnUSERZK = new System.Data.DataColumn("USERZK", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERZK);
                this.columnJINE = new System.Data.DataColumn("JINE", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJINE);
                this.columnID.AutoIncrement = true;
                this.columnJINE.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览Row New销售总览Row() {
                return ((销售总览Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 销售总览Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(销售总览Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.JINEColumn.Expression = "SSALE*USERZK-YHUI";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.销售总览RowChanged != null)) {
                    this.销售总览RowChanged(this, new 销售总览RowChangeEvent(((销售总览Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.销售总览RowChanging != null)) {
                    this.销售总览RowChanging(this, new 销售总览RowChangeEvent(((销售总览Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.销售总览RowDeleted != null)) {
                    this.销售总览RowDeleted(this, new 销售总览RowChangeEvent(((销售总览Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.销售总览RowDeleting != null)) {
                    this.销售总览RowDeleting(this, new 销售总览RowChangeEvent(((销售总览Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove销售总览Row(销售总览Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "销售总览DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 客户购买记录DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTIME;
            
            private System.Data.DataColumn columnTM;
            
            private System.Data.DataColumn columnNAME;
            
            private System.Data.DataColumn columnSSALE;
            
            private System.Data.DataColumn columnZKOU;
            
            private System.Data.DataColumn columnMDIAN;
            
            private System.Data.DataColumn columnJLIAO;
            
            private System.Data.DataColumn columnSLIAO;
            
            private System.Data.DataColumn columnSSI;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录DataTable() : 
                    this(false) {
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 客户购买记录DataTable(bool initExpressions) {
                this.TableName = "客户购买记录";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 客户购买记录DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 客户购买记录DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTIMEColumn {
                get {
                    return this.columnSETTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TMColumn {
                get {
                    return this.columnTM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSALEColumn {
                get {
                    return this.columnSSALE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZKOUColumn {
                get {
                    return this.columnZKOU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MDIANColumn {
                get {
                    return this.columnMDIAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn JLIAOColumn {
                get {
                    return this.columnJLIAO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIAOColumn {
                get {
                    return this.columnSLIAO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSIColumn {
                get {
                    return this.columnSSI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录Row this[int index] {
                get {
                    return ((客户购买记录Row)(this.Rows[index]));
                }
            }
            
            public event 客户购买记录RowChangeEventHandler 客户购买记录RowChanging;
            
            public event 客户购买记录RowChangeEventHandler 客户购买记录RowChanged;
            
            public event 客户购买记录RowChangeEventHandler 客户购买记录RowDeleting;
            
            public event 客户购买记录RowChangeEventHandler 客户购买记录RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add客户购买记录Row(客户购买记录Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录Row Add客户购买记录Row(string SETTIME, string TM, string NAME, string SSALE, string ZKOU, string MDIAN, string JLIAO, string SLIAO, string SSI) {
                客户购买记录Row row客户购买记录Row = ((客户购买记录Row)(this.NewRow()));
                row客户购买记录Row.ItemArray = new object[] {
                        SETTIME,
                        TM,
                        NAME,
                        SSALE,
                        ZKOU,
                        MDIAN,
                        JLIAO,
                        SLIAO,
                        SSI};
                this.Rows.Add(row客户购买记录Row);
                return row客户购买记录Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                客户购买记录DataTable cln = ((客户购买记录DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 客户购买记录DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTIME = base.Columns["SETTIME"];
                this.columnTM = base.Columns["TM"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSSALE = base.Columns["SSALE"];
                this.columnZKOU = base.Columns["ZKOU"];
                this.columnMDIAN = base.Columns["MDIAN"];
                this.columnJLIAO = base.Columns["JLIAO"];
                this.columnSLIAO = base.Columns["SLIAO"];
                this.columnSSI = base.Columns["SSI"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTIME = new System.Data.DataColumn("SETTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTIME);
                this.columnTM = new System.Data.DataColumn("TM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTM);
                this.columnNAME = new System.Data.DataColumn("NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSSALE = new System.Data.DataColumn("SSALE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSALE);
                this.columnZKOU = new System.Data.DataColumn("ZKOU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZKOU);
                this.columnMDIAN = new System.Data.DataColumn("MDIAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDIAN);
                this.columnJLIAO = new System.Data.DataColumn("JLIAO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnJLIAO);
                this.columnSLIAO = new System.Data.DataColumn("SLIAO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIAO);
                this.columnSSI = new System.Data.DataColumn("SSI", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSI);
                this.columnNAME.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录Row New客户购买记录Row() {
                return ((客户购买记录Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 客户购买记录Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(客户购买记录Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitExpressions() {
                this.NAMEColumn.Expression = "JLIAO+SLIAO+SSI";
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.客户购买记录RowChanged != null)) {
                    this.客户购买记录RowChanged(this, new 客户购买记录RowChangeEvent(((客户购买记录Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.客户购买记录RowChanging != null)) {
                    this.客户购买记录RowChanging(this, new 客户购买记录RowChangeEvent(((客户购买记录Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.客户购买记录RowDeleted != null)) {
                    this.客户购买记录RowDeleted(this, new 客户购买记录RowChangeEvent(((客户购买记录Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.客户购买记录RowDeleting != null)) {
                    this.客户购买记录RowDeleting(this, new 客户购买记录RowChangeEvent(((客户购买记录Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove客户购买记录Row(客户购买记录Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "客户购买记录DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 单据分析DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSETTIME;
            
            private System.Data.DataColumn columnSBM;
            
            private System.Data.DataColumn columnSLIANG;
            
            private System.Data.DataColumn columnSALES;
            
            private System.Data.DataColumn columnUSER;
            
            private System.Data.DataColumn columnYHUI;
            
            private System.Data.DataColumn columnZK;
            
            private System.Data.DataColumn columnSSALES;
            
            private System.Data.DataColumn columnKHU;
            
            private System.Data.DataColumn columnKEHUID;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析DataTable() {
                this.TableName = "单据分析";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 单据分析DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 单据分析DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTIMEColumn {
                get {
                    return this.columnSETTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SBMColumn {
                get {
                    return this.columnSBM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIANGColumn {
                get {
                    return this.columnSLIANG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SALESColumn {
                get {
                    return this.columnSALES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn YHUIColumn {
                get {
                    return this.columnYHUI;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ZKColumn {
                get {
                    return this.columnZK;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SSALESColumn {
                get {
                    return this.columnSSALES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KHUColumn {
                get {
                    return this.columnKHU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn KEHUIDColumn {
                get {
                    return this.columnKEHUID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析Row this[int index] {
                get {
                    return ((单据分析Row)(this.Rows[index]));
                }
            }
            
            public event 单据分析RowChangeEventHandler 单据分析RowChanging;
            
            public event 单据分析RowChangeEventHandler 单据分析RowChanged;
            
            public event 单据分析RowChangeEventHandler 单据分析RowDeleting;
            
            public event 单据分析RowChangeEventHandler 单据分析RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add单据分析Row(单据分析Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析Row Add单据分析Row(string SETTIME, string SBM, double SLIANG, double SALES, string USER, double YHUI, double ZK, double SSALES, string KHU, string KEHUID) {
                单据分析Row row单据分析Row = ((单据分析Row)(this.NewRow()));
                row单据分析Row.ItemArray = new object[] {
                        SETTIME,
                        SBM,
                        SLIANG,
                        SALES,
                        USER,
                        YHUI,
                        ZK,
                        SSALES,
                        KHU,
                        KEHUID};
                this.Rows.Add(row单据分析Row);
                return row单据分析Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                单据分析DataTable cln = ((单据分析DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 单据分析DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSETTIME = base.Columns["SETTIME"];
                this.columnSBM = base.Columns["SBM"];
                this.columnSLIANG = base.Columns["SLIANG"];
                this.columnSALES = base.Columns["SALES"];
                this.columnUSER = base.Columns["USER"];
                this.columnYHUI = base.Columns["YHUI"];
                this.columnZK = base.Columns["ZK"];
                this.columnSSALES = base.Columns["SSALES"];
                this.columnKHU = base.Columns["KHU"];
                this.columnKEHUID = base.Columns["KEHUID"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSETTIME = new System.Data.DataColumn("SETTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTIME);
                this.columnSBM = new System.Data.DataColumn("SBM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBM);
                this.columnSLIANG = new System.Data.DataColumn("SLIANG", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIANG);
                this.columnSALES = new System.Data.DataColumn("SALES", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES);
                this.columnUSER = new System.Data.DataColumn("USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
                this.columnYHUI = new System.Data.DataColumn("YHUI", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnYHUI);
                this.columnZK = new System.Data.DataColumn("ZK", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnZK);
                this.columnSSALES = new System.Data.DataColumn("SSALES", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSALES);
                this.columnKHU = new System.Data.DataColumn("KHU", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKHU);
                this.columnKEHUID = new System.Data.DataColumn("KEHUID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEHUID);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析Row New单据分析Row() {
                return ((单据分析Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 单据分析Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(单据分析Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.单据分析RowChanged != null)) {
                    this.单据分析RowChanged(this, new 单据分析RowChangeEvent(((单据分析Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.单据分析RowChanging != null)) {
                    this.单据分析RowChanging(this, new 单据分析RowChangeEvent(((单据分析Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.单据分析RowDeleted != null)) {
                    this.单据分析RowDeleted(this, new 单据分析RowChangeEvent(((单据分析Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.单据分析RowDeleting != null)) {
                    this.单据分析RowDeleting(this, new 单据分析RowChangeEvent(((单据分析Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove单据分析Row(单据分析Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "单据分析DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 门店退货DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnTM;
            
            private System.Data.DataColumn columnSETTIME;
            
            private System.Data.DataColumn columnUSER;
            
            private System.Data.DataColumn columnMDIAN;
            
            private System.Data.DataColumn columnSLIANG;
            
            private System.Data.DataColumn columnSBM;
            
            private System.Data.DataColumn columnDH;
            
            private System.Data.DataColumn columnUSERS;
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnnTXT;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货DataTable() {
                this.TableName = "门店退货";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门店退货DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 门店退货DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TMColumn {
                get {
                    return this.columnTM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SETTIMEColumn {
                get {
                    return this.columnSETTIME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERColumn {
                get {
                    return this.columnUSER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MDIANColumn {
                get {
                    return this.columnMDIAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SLIANGColumn {
                get {
                    return this.columnSLIANG;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SBMColumn {
                get {
                    return this.columnSBM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DHColumn {
                get {
                    return this.columnDH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USERSColumn {
                get {
                    return this.columnUSERS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nTXTColumn {
                get {
                    return this.columnnTXT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货Row this[int index] {
                get {
                    return ((门店退货Row)(this.Rows[index]));
                }
            }
            
            public event 门店退货RowChangeEventHandler 门店退货RowChanging;
            
            public event 门店退货RowChangeEventHandler 门店退货RowChanged;
            
            public event 门店退货RowChangeEventHandler 门店退货RowDeleting;
            
            public event 门店退货RowChangeEventHandler 门店退货RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add门店退货Row(门店退货Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货Row Add门店退货Row(string TM, string SETTIME, string USER, string MDIAN, string SLIANG, string SBM, string DH, string USERS, string nTXT) {
                门店退货Row row门店退货Row = ((门店退货Row)(this.NewRow()));
                row门店退货Row.ItemArray = new object[] {
                        TM,
                        SETTIME,
                        USER,
                        MDIAN,
                        SLIANG,
                        SBM,
                        DH,
                        USERS,
                        null,
                        nTXT};
                this.Rows.Add(row门店退货Row);
                return row门店退货Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                门店退货DataTable cln = ((门店退货DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 门店退货DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTM = base.Columns["TM"];
                this.columnSETTIME = base.Columns["SETTIME"];
                this.columnUSER = base.Columns["USER"];
                this.columnMDIAN = base.Columns["MDIAN"];
                this.columnSLIANG = base.Columns["SLIANG"];
                this.columnSBM = base.Columns["SBM"];
                this.columnDH = base.Columns["DH"];
                this.columnUSERS = base.Columns["USERS"];
                this.columnID = base.Columns["ID"];
                this.columnnTXT = base.Columns["nTXT"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTM = new System.Data.DataColumn("TM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTM);
                this.columnSETTIME = new System.Data.DataColumn("SETTIME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETTIME);
                this.columnUSER = new System.Data.DataColumn("USER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER);
                this.columnMDIAN = new System.Data.DataColumn("MDIAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDIAN);
                this.columnSLIANG = new System.Data.DataColumn("SLIANG", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIANG);
                this.columnSBM = new System.Data.DataColumn("SBM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBM);
                this.columnDH = new System.Data.DataColumn("DH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDH);
                this.columnUSERS = new System.Data.DataColumn("USERS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERS);
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnnTXT = new System.Data.DataColumn("nTXT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnTXT);
                this.columnID.AutoIncrement = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货Row New门店退货Row() {
                return ((门店退货Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 门店退货Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(门店退货Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.门店退货RowChanged != null)) {
                    this.门店退货RowChanged(this, new 门店退货RowChangeEvent(((门店退货Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.门店退货RowChanging != null)) {
                    this.门店退货RowChanging(this, new 门店退货RowChangeEvent(((门店退货Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.门店退货RowDeleted != null)) {
                    this.门店退货RowDeleted(this, new 门店退货RowChangeEvent(((门店退货Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.门店退货RowDeleting != null)) {
                    this.门店退货RowDeleting(this, new 门店退货RowChangeEvent(((门店退货Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove门店退货Row(门店退货Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                theDST ds = new theDST();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "门店退货DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 员工Row : System.Data.DataRow {
            
            private 员工DataTable table员工;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 员工Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table员工 = ((员工DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.table员工.idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“员工”中列“id”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table员工.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sid {
                get {
                    try {
                        return ((string)(this[this.table员工.sidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“员工”中列“sid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table员工.sidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table员工.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“员工”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table员工.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pwd {
                get {
                    try {
                        return ((string)(this[this.table员工.pwdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“员工”中列“pwd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table员工.pwdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mdian {
                get {
                    try {
                        return ((string)(this[this.table员工.mdianColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“员工”中列“mdian”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table员工.mdianColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.table员工.idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.table员工.idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssidNull() {
                return this.IsNull(this.table员工.sidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsidNull() {
                this[this.table员工.sidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table员工.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table员工.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspwdNull() {
                return this.IsNull(this.table员工.pwdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpwdNull() {
                this[this.table员工.pwdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmdianNull() {
                return this.IsNull(this.table员工.mdianColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmdianNull() {
                this[this.table员工.mdianColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 销售表Row : System.Data.DataRow {
            
            private 销售表DataTable table销售表;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售表Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table销售表 = ((销售表DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tm {
                get {
                    return ((string)(this[this.table销售表.tmColumn]));
                }
                set {
                    this[this.table销售表.tmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table销售表.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qkou {
                get {
                    try {
                        return ((string)(this[this.table销售表.qkouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“qkou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.qkouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zshu {
                get {
                    try {
                        return ((string)(this[this.table销售表.zshuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“zshu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.zshuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kus {
                get {
                    try {
                        return ((string)(this[this.table销售表.kusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“kus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.kusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jianz {
                get {
                    try {
                        return ((string)(this[this.table销售表.jianzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“jianz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.jianzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jinz {
                get {
                    try {
                        return ((string)(this[this.table销售表.jinzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“jinz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.jinzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pjianz {
                get {
                    try {
                        return ((string)(this[this.table销售表.pjianzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“pjianz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.pjianzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zshi {
                get {
                    try {
                        return ((string)(this[this.table销售表.zshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“zshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.zshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fshi {
                get {
                    try {
                        return ((string)(this[this.table销售表.fshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“fshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.fshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int xsou {
                get {
                    try {
                        return ((int)(this[this.table销售表.xsouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“xsou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.xsouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool imgbol {
                get {
                    try {
                        return ((bool)(this[this.table销售表.imgbolColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“imgbol”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.imgbolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jdu {
                get {
                    try {
                        return ((string)(this[this.table销售表.jduColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“jdu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.jduColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yse {
                get {
                    try {
                        return ((string)(this[this.table销售表.yseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“yse”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.yseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xzuang {
                get {
                    try {
                        return ((string)(this[this.table销售表.xzuangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“xzuang”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.xzuangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qgong {
                get {
                    try {
                        return ((string)(this[this.table销售表.qgongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“qgong”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.qgongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.table销售表.idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“id”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sxsou {
                get {
                    try {
                        return ((int)(this[this.table销售表.sxsouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“sxsou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.sxsouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double zk {
                get {
                    try {
                        return ((double)(this[this.table销售表.zkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“zk”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.zkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jliao {
                get {
                    try {
                        return ((string)(this[this.table销售表.jliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“jliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.jliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sliao {
                get {
                    try {
                        return ((string)(this[this.table销售表.sliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“sliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.sliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ssi {
                get {
                    try {
                        return ((string)(this[this.table销售表.ssiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“ssi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.ssiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cbei {
                get {
                    try {
                        return ((string)(this[this.table销售表.cbeiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“cbei”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.cbeiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sliang {
                get {
                    try {
                        return ((string)(this[this.table销售表.sliangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“sliang”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.sliangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dwei {
                get {
                    try {
                        return ((string)(this[this.table销售表.dweiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“dwei”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.dweiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double zss {
                get {
                    try {
                        return ((double)(this[this.table销售表.zssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“zss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.zssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double zsz {
                get {
                    try {
                        return ((double)(this[this.table销售表.zszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“zsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.zszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double fss {
                get {
                    try {
                        return ((double)(this[this.table销售表.fssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“fss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.fssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double fsz {
                get {
                    try {
                        return ((double)(this[this.table销售表.fszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售表”中列“fsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售表.fszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table销售表.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table销售表.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqkouNull() {
                return this.IsNull(this.table销售表.qkouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqkouNull() {
                this[this.table销售表.qkouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszshuNull() {
                return this.IsNull(this.table销售表.zshuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzshuNull() {
                this[this.table销售表.zshuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskusNull() {
                return this.IsNull(this.table销售表.kusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkusNull() {
                this[this.table销售表.kusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjianzNull() {
                return this.IsNull(this.table销售表.jianzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjianzNull() {
                this[this.table销售表.jianzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjinzNull() {
                return this.IsNull(this.table销售表.jinzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjinzNull() {
                this[this.table销售表.jinzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspjianzNull() {
                return this.IsNull(this.table销售表.pjianzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpjianzNull() {
                this[this.table销售表.pjianzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszshiNull() {
                return this.IsNull(this.table销售表.zshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzshiNull() {
                this[this.table销售表.zshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfshiNull() {
                return this.IsNull(this.table销售表.fshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfshiNull() {
                this[this.table销售表.fshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxsouNull() {
                return this.IsNull(this.table销售表.xsouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxsouNull() {
                this[this.table销售表.xsouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimgbolNull() {
                return this.IsNull(this.table销售表.imgbolColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimgbolNull() {
                this[this.table销售表.imgbolColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjduNull() {
                return this.IsNull(this.table销售表.jduColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjduNull() {
                this[this.table销售表.jduColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyseNull() {
                return this.IsNull(this.table销售表.yseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyseNull() {
                this[this.table销售表.yseColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxzuangNull() {
                return this.IsNull(this.table销售表.xzuangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxzuangNull() {
                this[this.table销售表.xzuangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqgongNull() {
                return this.IsNull(this.table销售表.qgongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqgongNull() {
                this[this.table销售表.qgongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.table销售表.idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.table销售表.idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssxsouNull() {
                return this.IsNull(this.table销售表.sxsouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsxsouNull() {
                this[this.table销售表.sxsouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszkNull() {
                return this.IsNull(this.table销售表.zkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzkNull() {
                this[this.table销售表.zkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjliaoNull() {
                return this.IsNull(this.table销售表.jliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjliaoNull() {
                this[this.table销售表.jliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliaoNull() {
                return this.IsNull(this.table销售表.sliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliaoNull() {
                this[this.table销售表.sliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsssiNull() {
                return this.IsNull(this.table销售表.ssiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetssiNull() {
                this[this.table销售表.ssiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscbeiNull() {
                return this.IsNull(this.table销售表.cbeiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcbeiNull() {
                this[this.table销售表.cbeiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliangNull() {
                return this.IsNull(this.table销售表.sliangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliangNull() {
                this[this.table销售表.sliangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdweiNull() {
                return this.IsNull(this.table销售表.dweiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdweiNull() {
                this[this.table销售表.dweiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszssNull() {
                return this.IsNull(this.table销售表.zssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzssNull() {
                this[this.table销售表.zssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszszNull() {
                return this.IsNull(this.table销售表.zszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzszNull() {
                this[this.table销售表.zszColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfssNull() {
                return this.IsNull(this.table销售表.fssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfssNull() {
                this[this.table销售表.fssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfszNull() {
                return this.IsNull(this.table销售表.fszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfszNull() {
                this[this.table销售表.fszColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 发货单列表Row : System.Data.DataRow {
            
            private 发货单列表DataTable table发货单列表;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 发货单列表Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table发货单列表 = ((发货单列表DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XTIME {
                get {
                    try {
                        return ((string)(this[this.table发货单列表.XTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“发货单列表”中列“XTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发货单列表.XTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DH {
                get {
                    try {
                        return ((string)(this[this.table发货单列表.DHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“发货单列表”中列“DH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发货单列表.DHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL {
                get {
                    try {
                        return ((string)(this[this.table发货单列表.SLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“发货单列表”中列“SL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发货单列表.SLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER {
                get {
                    try {
                        return ((string)(this[this.table发货单列表.USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“发货单列表”中列“USER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table发货单列表.USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXTIMENull() {
                return this.IsNull(this.table发货单列表.XTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXTIMENull() {
                this[this.table发货单列表.XTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHNull() {
                return this.IsNull(this.table发货单列表.DHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHNull() {
                this[this.table发货单列表.DHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNull() {
                return this.IsNull(this.table发货单列表.SLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNull() {
                this[this.table发货单列表.SLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERNull() {
                return this.IsNull(this.table发货单列表.USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERNull() {
                this[this.table发货单列表.USERColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class goodsRow : System.Data.DataRow {
            
            private goodsDataTable tablegoods;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal goodsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegoods = ((goodsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tablegoods.idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“id”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tm {
                get {
                    return ((string)(this[this.tablegoods.tmColumn]));
                }
                set {
                    this[this.tablegoods.tmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jliao {
                get {
                    try {
                        return ((string)(this[this.tablegoods.jliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“jliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.jliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sliao {
                get {
                    try {
                        return ((string)(this[this.tablegoods.sliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“sliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.sliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ssi {
                get {
                    try {
                        return ((string)(this[this.tablegoods.ssiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“ssi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.ssiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qkou {
                get {
                    try {
                        return ((string)(this[this.tablegoods.qkouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“qkou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.qkouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zshu {
                get {
                    try {
                        return ((string)(this[this.tablegoods.zshuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“zshu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.zshuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kus {
                get {
                    try {
                        return ((string)(this[this.tablegoods.kusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“kus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.kusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hhao {
                get {
                    try {
                        return ((string)(this[this.tablegoods.hhaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“hhao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.hhaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dwei {
                get {
                    try {
                        return ((string)(this[this.tablegoods.dweiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“dwei”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.dweiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sliang {
                get {
                    try {
                        return ((int)(this[this.tablegoods.sliangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“sliang”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.sliangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double jianz {
                get {
                    try {
                        return ((double)(this[this.tablegoods.jianzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“jianz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.jianzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double jinz {
                get {
                    try {
                        return ((double)(this[this.tablegoods.jinzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“jinz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.jinzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pjianz {
                get {
                    try {
                        return ((double)(this[this.tablegoods.pjianzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“pjianz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.pjianzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double blu {
                get {
                    try {
                        return ((double)(this[this.tablegoods.bluColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“blu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.bluColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double zsz {
                get {
                    try {
                        return ((double)(this[this.tablegoods.zszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“zsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.zszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int zss {
                get {
                    try {
                        return ((int)(this[this.tablegoods.zssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“zss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.zssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double fsz {
                get {
                    try {
                        return ((double)(this[this.tablegoods.fszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“fsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.fszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int fss {
                get {
                    try {
                        return ((int)(this[this.tablegoods.fssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“fss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.fssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cbei {
                get {
                    try {
                        return ((double)(this[this.tablegoods.cbeiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“cbei”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.cbeiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double xsou {
                get {
                    try {
                        return ((double)(this[this.tablegoods.xsouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“xsou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.xsouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bzhu {
                get {
                    try {
                        return ((string)(this[this.tablegoods.bzhuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“bzhu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.bzhuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool slbol {
                get {
                    try {
                        return ((bool)(this[this.tablegoods.slbolColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“slbol”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.slbolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool imgbol {
                get {
                    try {
                        return ((bool)(this[this.tablegoods.imgbolColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“imgbol”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.imgbolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablegoods.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zshi {
                get {
                    try {
                        return ((string)(this[this.tablegoods.zshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“zshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.zshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fshi {
                get {
                    try {
                        return ((string)(this[this.tablegoods.fshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“fshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.fshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string yse {
                get {
                    try {
                        return ((string)(this[this.tablegoods.yseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“yse”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.yseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string xzuang {
                get {
                    try {
                        return ((string)(this[this.tablegoods.xzuangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“xzuang”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.xzuangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qgong {
                get {
                    try {
                        return ((string)(this[this.tablegoods.qgongColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“qgong”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.qgongColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jdu {
                get {
                    try {
                        return ((string)(this[this.tablegoods.jduColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“goods”中列“jdu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegoods.jduColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablegoods.idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablegoods.idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjliaoNull() {
                return this.IsNull(this.tablegoods.jliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjliaoNull() {
                this[this.tablegoods.jliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliaoNull() {
                return this.IsNull(this.tablegoods.sliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliaoNull() {
                this[this.tablegoods.sliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsssiNull() {
                return this.IsNull(this.tablegoods.ssiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetssiNull() {
                this[this.tablegoods.ssiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqkouNull() {
                return this.IsNull(this.tablegoods.qkouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqkouNull() {
                this[this.tablegoods.qkouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszshuNull() {
                return this.IsNull(this.tablegoods.zshuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzshuNull() {
                this[this.tablegoods.zshuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskusNull() {
                return this.IsNull(this.tablegoods.kusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkusNull() {
                this[this.tablegoods.kusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshhaoNull() {
                return this.IsNull(this.tablegoods.hhaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethhaoNull() {
                this[this.tablegoods.hhaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdweiNull() {
                return this.IsNull(this.tablegoods.dweiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdweiNull() {
                this[this.tablegoods.dweiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliangNull() {
                return this.IsNull(this.tablegoods.sliangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliangNull() {
                this[this.tablegoods.sliangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjianzNull() {
                return this.IsNull(this.tablegoods.jianzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjianzNull() {
                this[this.tablegoods.jianzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjinzNull() {
                return this.IsNull(this.tablegoods.jinzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjinzNull() {
                this[this.tablegoods.jinzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspjianzNull() {
                return this.IsNull(this.tablegoods.pjianzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpjianzNull() {
                this[this.tablegoods.pjianzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbluNull() {
                return this.IsNull(this.tablegoods.bluColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbluNull() {
                this[this.tablegoods.bluColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszszNull() {
                return this.IsNull(this.tablegoods.zszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzszNull() {
                this[this.tablegoods.zszColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszssNull() {
                return this.IsNull(this.tablegoods.zssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzssNull() {
                this[this.tablegoods.zssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfszNull() {
                return this.IsNull(this.tablegoods.fszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfszNull() {
                this[this.tablegoods.fszColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfssNull() {
                return this.IsNull(this.tablegoods.fssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfssNull() {
                this[this.tablegoods.fssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscbeiNull() {
                return this.IsNull(this.tablegoods.cbeiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcbeiNull() {
                this[this.tablegoods.cbeiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxsouNull() {
                return this.IsNull(this.tablegoods.xsouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxsouNull() {
                this[this.tablegoods.xsouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbzhuNull() {
                return this.IsNull(this.tablegoods.bzhuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbzhuNull() {
                this[this.tablegoods.bzhuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsslbolNull() {
                return this.IsNull(this.tablegoods.slbolColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetslbolNull() {
                this[this.tablegoods.slbolColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimgbolNull() {
                return this.IsNull(this.tablegoods.imgbolColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimgbolNull() {
                this[this.tablegoods.imgbolColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablegoods.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablegoods.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszshiNull() {
                return this.IsNull(this.tablegoods.zshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzshiNull() {
                this[this.tablegoods.zshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfshiNull() {
                return this.IsNull(this.tablegoods.fshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfshiNull() {
                this[this.tablegoods.fshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyseNull() {
                return this.IsNull(this.tablegoods.yseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyseNull() {
                this[this.tablegoods.yseColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsxzuangNull() {
                return this.IsNull(this.tablegoods.xzuangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetxzuangNull() {
                this[this.tablegoods.xzuangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqgongNull() {
                return this.IsNull(this.tablegoods.qgongColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqgongNull() {
                this[this.tablegoods.qgongColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjduNull() {
                return this.IsNull(this.tablegoods.jduColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjduNull() {
                this[this.tablegoods.jduColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 销退表Row : System.Data.DataRow {
            
            private 销退表DataTable table销退表;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销退表Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table销退表 = ((销退表DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tm {
                get {
                    try {
                        return ((string)(this[this.table销退表.tmColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“tm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.tmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.table销退表.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string settime {
                get {
                    try {
                        return ((string)(this[this.table销退表.settimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“settime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.settimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sbm {
                get {
                    try {
                        return ((string)(this[this.table销退表.sbmColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“sbm”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.sbmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sliang {
                get {
                    try {
                        return ((string)(this[this.table销退表.sliangColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“sliang”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.sliangColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dwei {
                get {
                    try {
                        return ((string)(this[this.table销退表.dweiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“dwei”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.dweiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zkou {
                get {
                    try {
                        return ((string)(this[this.table销退表.zkouColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“zkou”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.zkouColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string khu {
                get {
                    try {
                        return ((string)(this[this.table销退表.khuColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“khu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.khuColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user {
                get {
                    try {
                        return ((string)(this[this.table销退表.userColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“user”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.userColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sale {
                get {
                    try {
                        return ((string)(this[this.table销退表.saleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“sale”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.saleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ssale {
                get {
                    try {
                        return ((double)(this[this.table销退表.ssaleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“ssale”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.ssaleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool imgbol {
                get {
                    try {
                        return ((bool)(this[this.table销退表.imgbolColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“imgbol”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.imgbolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jliao {
                get {
                    try {
                        return ((string)(this[this.table销退表.jliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“jliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.jliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sliao {
                get {
                    try {
                        return ((string)(this[this.table销退表.sliaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“sliao”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.sliaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ssi {
                get {
                    try {
                        return ((string)(this[this.table销退表.ssiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“ssi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.ssiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kehuid {
                get {
                    try {
                        return ((string)(this[this.table销退表.kehuidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“kehuid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.kehuidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double tjia {
                get {
                    try {
                        return ((double)(this[this.table销退表.tjiaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“tjia”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.tjiaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zss {
                get {
                    try {
                        return ((string)(this[this.table销退表.zssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“zss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.zssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zsz {
                get {
                    try {
                        return ((string)(this[this.table销退表.zszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“zsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.zszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fss {
                get {
                    try {
                        return ((string)(this[this.table销退表.fssColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“fss”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.fssColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fsz {
                get {
                    try {
                        return ((string)(this[this.table销退表.fszColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“fsz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.fszColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zshi {
                get {
                    try {
                        return ((string)(this[this.table销退表.zshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“zshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.zshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fshi {
                get {
                    try {
                        return ((string)(this[this.table销退表.fshiColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“fshi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.fshiColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string jinz {
                get {
                    try {
                        return ((string)(this[this.table销退表.jinzColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“jinz”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.jinzColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kus {
                get {
                    try {
                        return ((string)(this[this.table销退表.kusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销退表”中列“kus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销退表.kusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstmNull() {
                return this.IsNull(this.table销退表.tmColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettmNull() {
                this[this.table销退表.tmColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.table销退表.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.table销退表.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssettimeNull() {
                return this.IsNull(this.table销退表.settimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsettimeNull() {
                this[this.table销退表.settimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssbmNull() {
                return this.IsNull(this.table销退表.sbmColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsbmNull() {
                this[this.table销退表.sbmColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliangNull() {
                return this.IsNull(this.table销退表.sliangColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliangNull() {
                this[this.table销退表.sliangColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdweiNull() {
                return this.IsNull(this.table销退表.dweiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdweiNull() {
                this[this.table销退表.dweiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszkouNull() {
                return this.IsNull(this.table销退表.zkouColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzkouNull() {
                this[this.table销退表.zkouColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskhuNull() {
                return this.IsNull(this.table销退表.khuColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkhuNull() {
                this[this.table销退表.khuColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNull() {
                return this.IsNull(this.table销退表.userColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNull() {
                this[this.table销退表.userColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaleNull() {
                return this.IsNull(this.table销退表.saleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaleNull() {
                this[this.table销退表.saleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsssaleNull() {
                return this.IsNull(this.table销退表.ssaleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetssaleNull() {
                this[this.table销退表.ssaleColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimgbolNull() {
                return this.IsNull(this.table销退表.imgbolColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimgbolNull() {
                this[this.table销退表.imgbolColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjliaoNull() {
                return this.IsNull(this.table销退表.jliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjliaoNull() {
                this[this.table销退表.jliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssliaoNull() {
                return this.IsNull(this.table销退表.sliaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsliaoNull() {
                this[this.table销退表.sliaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsssiNull() {
                return this.IsNull(this.table销退表.ssiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetssiNull() {
                this[this.table销退表.ssiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskehuidNull() {
                return this.IsNull(this.table销退表.kehuidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkehuidNull() {
                this[this.table销退表.kehuidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstjiaNull() {
                return this.IsNull(this.table销退表.tjiaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettjiaNull() {
                this[this.table销退表.tjiaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszssNull() {
                return this.IsNull(this.table销退表.zssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzssNull() {
                this[this.table销退表.zssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszszNull() {
                return this.IsNull(this.table销退表.zszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzszNull() {
                this[this.table销退表.zszColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfssNull() {
                return this.IsNull(this.table销退表.fssColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfssNull() {
                this[this.table销退表.fssColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfszNull() {
                return this.IsNull(this.table销退表.fszColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfszNull() {
                this[this.table销退表.fszColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszshiNull() {
                return this.IsNull(this.table销退表.zshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzshiNull() {
                this[this.table销退表.zshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfshiNull() {
                return this.IsNull(this.table销退表.fshiColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfshiNull() {
                this[this.table销退表.fshiColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjinzNull() {
                return this.IsNull(this.table销退表.jinzColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjinzNull() {
                this[this.table销退表.jinzColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskusNull() {
                return this.IsNull(this.table销退表.kusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkusNull() {
                this[this.table销退表.kusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 销售统计表Row : System.Data.DataRow {
            
            private 销售统计表DataTable table销售统计表;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售统计表Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table销售统计表 = ((销售统计表DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TM {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.TMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“TM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.TMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IMGBOL {
                get {
                    try {
                        return ((bool)(this[this.table销售统计表.IMGBOLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“IMGBOL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.IMGBOLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SALE {
                get {
                    try {
                        return ((double)(this[this.table销售统计表.SALEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SALE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SALEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SSALE {
                get {
                    try {
                        return ((double)(this[this.table销售统计表.SSALEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SSALE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SSALEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KHU {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.KHUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“KHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.KHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBM {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.SBMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SBM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SBMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTIME {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.SETTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SETTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SETTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“USER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZKOU {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.ZKOUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“ZKOU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.ZKOUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SLIANG {
                get {
                    try {
                        return ((int)(this[this.table销售统计表.SLIANGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SLIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SLIANGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DWEI {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.DWEIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“DWEI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.DWEIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLIAO {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.SLIAOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SLIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SLIAOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLIAO {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.JLIAOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“JLIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.JLIAOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSI {
                get {
                    try {
                        return ((string)(this[this.table销售统计表.SSIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“SSI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.SSIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table销售统计表.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售统计表”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售统计表.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMNull() {
                return this.IsNull(this.table销售统计表.TMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMNull() {
                this[this.table销售统计表.TMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.table销售统计表.NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.table销售统计表.NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMGBOLNull() {
                return this.IsNull(this.table销售统计表.IMGBOLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMGBOLNull() {
                this[this.table销售统计表.IMGBOLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALENull() {
                return this.IsNull(this.table销售统计表.SALEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALENull() {
                this[this.table销售统计表.SALEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSALENull() {
                return this.IsNull(this.table销售统计表.SSALEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSALENull() {
                this[this.table销售统计表.SSALEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHUNull() {
                return this.IsNull(this.table销售统计表.KHUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHUNull() {
                this[this.table销售统计表.KHUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBMNull() {
                return this.IsNull(this.table销售统计表.SBMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBMNull() {
                this[this.table销售统计表.SBMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTIMENull() {
                return this.IsNull(this.table销售统计表.SETTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTIMENull() {
                this[this.table销售统计表.SETTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERNull() {
                return this.IsNull(this.table销售统计表.USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERNull() {
                this[this.table销售统计表.USERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZKOUNull() {
                return this.IsNull(this.table销售统计表.ZKOUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZKOUNull() {
                this[this.table销售统计表.ZKOUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIANGNull() {
                return this.IsNull(this.table销售统计表.SLIANGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIANGNull() {
                this[this.table销售统计表.SLIANGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWEINull() {
                return this.IsNull(this.table销售统计表.DWEIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWEINull() {
                this[this.table销售统计表.DWEIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIAONull() {
                return this.IsNull(this.table销售统计表.SLIAOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIAONull() {
                this[this.table销售统计表.SLIAOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLIAONull() {
                return this.IsNull(this.table销售统计表.JLIAOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLIAONull() {
                this[this.table销售统计表.JLIAOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSINull() {
                return this.IsNull(this.table销售统计表.SSIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSINull() {
                this[this.table销售统计表.SSIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table销售统计表.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table销售统计表.IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 销售总览Row : System.Data.DataRow {
            
            private 销售总览DataTable table销售总览;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 销售总览Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table销售总览 = ((销售总览DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table销售总览.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTIME {
                get {
                    try {
                        return ((string)(this[this.table销售总览.SETTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“SETTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.SETTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBM {
                get {
                    try {
                        return ((string)(this[this.table销售总览.SBMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“SBM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.SBMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLIANG {
                get {
                    try {
                        return ((string)(this[this.table销售总览.SLIANGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“SLIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.SLIANGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER {
                get {
                    try {
                        return ((string)(this[this.table销售总览.USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“USER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SSALE {
                get {
                    try {
                        return ((double)(this[this.table销售总览.SSALEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“SSALE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.SSALEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YHUI {
                get {
                    try {
                        return ((double)(this[this.table销售总览.YHUIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“YHUI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.YHUIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double USERZK {
                get {
                    try {
                        return ((double)(this[this.table销售总览.USERZKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“USERZK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.USERZKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JINE {
                get {
                    try {
                        return ((double)(this[this.table销售总览.JINEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“销售总览”中列“JINE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table销售总览.JINEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table销售总览.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table销售总览.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTIMENull() {
                return this.IsNull(this.table销售总览.SETTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTIMENull() {
                this[this.table销售总览.SETTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBMNull() {
                return this.IsNull(this.table销售总览.SBMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBMNull() {
                this[this.table销售总览.SBMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIANGNull() {
                return this.IsNull(this.table销售总览.SLIANGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIANGNull() {
                this[this.table销售总览.SLIANGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERNull() {
                return this.IsNull(this.table销售总览.USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERNull() {
                this[this.table销售总览.USERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSALENull() {
                return this.IsNull(this.table销售总览.SSALEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSALENull() {
                this[this.table销售总览.SSALEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYHUINull() {
                return this.IsNull(this.table销售总览.YHUIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYHUINull() {
                this[this.table销售总览.YHUIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERZKNull() {
                return this.IsNull(this.table销售总览.USERZKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERZKNull() {
                this[this.table销售总览.USERZKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJINENull() {
                return this.IsNull(this.table销售总览.JINEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJINENull() {
                this[this.table销售总览.JINEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 客户购买记录Row : System.Data.DataRow {
            
            private 客户购买记录DataTable table客户购买记录;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 客户购买记录Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table客户购买记录 = ((客户购买记录DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTIME {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.SETTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“SETTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.SETTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TM {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.TMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“TM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.TMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSALE {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.SSALEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“SSALE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.SSALEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZKOU {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.ZKOUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“ZKOU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.ZKOUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDIAN {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.MDIANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“MDIAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.MDIANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JLIAO {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.JLIAOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“JLIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.JLIAOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLIAO {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.SLIAOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“SLIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.SLIAOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSI {
                get {
                    try {
                        return ((string)(this[this.table客户购买记录.SSIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客户购买记录”中列“SSI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客户购买记录.SSIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTIMENull() {
                return this.IsNull(this.table客户购买记录.SETTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTIMENull() {
                this[this.table客户购买记录.SETTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMNull() {
                return this.IsNull(this.table客户购买记录.TMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMNull() {
                this[this.table客户购买记录.TMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.table客户购买记录.NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.table客户购买记录.NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSALENull() {
                return this.IsNull(this.table客户购买记录.SSALEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSALENull() {
                this[this.table客户购买记录.SSALEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZKOUNull() {
                return this.IsNull(this.table客户购买记录.ZKOUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZKOUNull() {
                this[this.table客户购买记录.ZKOUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDIANNull() {
                return this.IsNull(this.table客户购买记录.MDIANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDIANNull() {
                this[this.table客户购买记录.MDIANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLIAONull() {
                return this.IsNull(this.table客户购买记录.JLIAOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLIAONull() {
                this[this.table客户购买记录.JLIAOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIAONull() {
                return this.IsNull(this.table客户购买记录.SLIAOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIAONull() {
                this[this.table客户购买记录.SLIAOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSINull() {
                return this.IsNull(this.table客户购买记录.SSIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSINull() {
                this[this.table客户购买记录.SSIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 单据分析Row : System.Data.DataRow {
            
            private 单据分析DataTable table单据分析;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 单据分析Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table单据分析 = ((单据分析DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTIME {
                get {
                    try {
                        return ((string)(this[this.table单据分析.SETTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“SETTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.SETTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBM {
                get {
                    try {
                        return ((string)(this[this.table单据分析.SBMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“SBM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.SBMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SLIANG {
                get {
                    try {
                        return ((double)(this[this.table单据分析.SLIANGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“SLIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.SLIANGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SALES {
                get {
                    try {
                        return ((double)(this[this.table单据分析.SALESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“SALES”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.SALESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER {
                get {
                    try {
                        return ((string)(this[this.table单据分析.USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“USER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double YHUI {
                get {
                    try {
                        return ((double)(this[this.table单据分析.YHUIColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“YHUI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.YHUIColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ZK {
                get {
                    try {
                        return ((double)(this[this.table单据分析.ZKColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“ZK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.ZKColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SSALES {
                get {
                    try {
                        return ((double)(this[this.table单据分析.SSALESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“SSALES”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.SSALESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KHU {
                get {
                    try {
                        return ((string)(this[this.table单据分析.KHUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“KHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.KHUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEHUID {
                get {
                    try {
                        return ((string)(this[this.table单据分析.KEHUIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“单据分析”中列“KEHUID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table单据分析.KEHUIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTIMENull() {
                return this.IsNull(this.table单据分析.SETTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTIMENull() {
                this[this.table单据分析.SETTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBMNull() {
                return this.IsNull(this.table单据分析.SBMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBMNull() {
                this[this.table单据分析.SBMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIANGNull() {
                return this.IsNull(this.table单据分析.SLIANGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIANGNull() {
                this[this.table单据分析.SLIANGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALESNull() {
                return this.IsNull(this.table单据分析.SALESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALESNull() {
                this[this.table单据分析.SALESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERNull() {
                return this.IsNull(this.table单据分析.USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERNull() {
                this[this.table单据分析.USERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYHUINull() {
                return this.IsNull(this.table单据分析.YHUIColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYHUINull() {
                this[this.table单据分析.YHUIColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZKNull() {
                return this.IsNull(this.table单据分析.ZKColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZKNull() {
                this[this.table单据分析.ZKColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSALESNull() {
                return this.IsNull(this.table单据分析.SSALESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSALESNull() {
                this[this.table单据分析.SSALESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKHUNull() {
                return this.IsNull(this.table单据分析.KHUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKHUNull() {
                this[this.table单据分析.KHUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKEHUIDNull() {
                return this.IsNull(this.table单据分析.KEHUIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKEHUIDNull() {
                this[this.table单据分析.KEHUIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 门店退货Row : System.Data.DataRow {
            
            private 门店退货DataTable table门店退货;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 门店退货Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table门店退货 = ((门店退货DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TM {
                get {
                    try {
                        return ((string)(this[this.table门店退货.TMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“TM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.TMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETTIME {
                get {
                    try {
                        return ((string)(this[this.table门店退货.SETTIMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“SETTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.SETTIMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER {
                get {
                    try {
                        return ((string)(this[this.table门店退货.USERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“USER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.USERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDIAN {
                get {
                    try {
                        return ((string)(this[this.table门店退货.MDIANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“MDIAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.MDIANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLIANG {
                get {
                    try {
                        return ((string)(this[this.table门店退货.SLIANGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“SLIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.SLIANGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBM {
                get {
                    try {
                        return ((string)(this[this.table门店退货.SBMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“SBM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.SBMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DH {
                get {
                    try {
                        return ((string)(this[this.table门店退货.DHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“DH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.DHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERS {
                get {
                    try {
                        return ((string)(this[this.table门店退货.USERSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“USERS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.USERSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.table门店退货.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nTXT {
                get {
                    try {
                        return ((string)(this[this.table门店退货.nTXTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“门店退货”中列“nTXT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table门店退货.nTXTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTMNull() {
                return this.IsNull(this.table门店退货.TMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTMNull() {
                this[this.table门店退货.TMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETTIMENull() {
                return this.IsNull(this.table门店退货.SETTIMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETTIMENull() {
                this[this.table门店退货.SETTIMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERNull() {
                return this.IsNull(this.table门店退货.USERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERNull() {
                this[this.table门店退货.USERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDIANNull() {
                return this.IsNull(this.table门店退货.MDIANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDIANNull() {
                this[this.table门店退货.MDIANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLIANGNull() {
                return this.IsNull(this.table门店退货.SLIANGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLIANGNull() {
                this[this.table门店退货.SLIANGColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBMNull() {
                return this.IsNull(this.table门店退货.SBMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBMNull() {
                this[this.table门店退货.SBMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDHNull() {
                return this.IsNull(this.table门店退货.DHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDHNull() {
                this[this.table门店退货.DHColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSERSNull() {
                return this.IsNull(this.table门店退货.USERSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSERSNull() {
                this[this.table门店退货.USERSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.table门店退货.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.table门店退货.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnTXTNull() {
                return this.IsNull(this.table门店退货.nTXTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnTXTNull() {
                this[this.table门店退货.nTXTColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 员工RowChangeEvent : System.EventArgs {
            
            private 员工Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工RowChangeEvent(员工Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 员工Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 销售表RowChangeEvent : System.EventArgs {
            
            private 销售表Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表RowChangeEvent(销售表Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 发货单列表RowChangeEvent : System.EventArgs {
            
            private 发货单列表Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表RowChangeEvent(发货单列表Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 发货单列表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class goodsRowChangeEvent : System.EventArgs {
            
            private goodsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRowChangeEvent(goodsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public goodsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 销退表RowChangeEvent : System.EventArgs {
            
            private 销退表Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表RowChangeEvent(销退表Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销退表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 销售统计表RowChangeEvent : System.EventArgs {
            
            private 销售统计表Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表RowChangeEvent(销售统计表Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售统计表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 销售总览RowChangeEvent : System.EventArgs {
            
            private 销售总览Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览RowChangeEvent(销售总览Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 销售总览Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 客户购买记录RowChangeEvent : System.EventArgs {
            
            private 客户购买记录Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录RowChangeEvent(客户购买记录Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客户购买记录Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 单据分析RowChangeEvent : System.EventArgs {
            
            private 单据分析Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析RowChangeEvent(单据分析Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 单据分析Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 门店退货RowChangeEvent : System.EventArgs {
            
            private 门店退货Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货RowChangeEvent(门店退货Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 门店退货Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591